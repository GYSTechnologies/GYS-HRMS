// import mongoose from "mongoose";

// const PayrollSchema = new mongoose.Schema(
//   {
//     employee: {
//       type: mongoose.Schema.Types.ObjectId,
//       ref: "Profile",
//       required: true,
//     },
//     basic: {
//       type: Number,
//       required: true,
//     },
//     hra: {
//       type: Number,
//       default: 0,
//     },
//     allowances: [
//       {
//         title: String,
//         amount: Number,
//       },
//     ],
//     deductions: [
//       {
//         title: String,
//         amount: Number,
//       },
//     ],
//     tax: {
//       type: Number,
//       default: 0,
//     },
//     month: {
//       type: String, // e.g. '2025-09'
//       required: true,
//     },
//     totalEarnings: { type: Number },
//     totalDeductions: { type: Number },
//     netPay: { type: Number },
//     generatedBy: {
//       type: mongoose.Schema.Types.ObjectId,
//       ref: "User",
//     },
//     generatedAt: {
//       type: Date,
//       default: Date.now,
//     },
//     status: {
//       type: String,
//       enum: ["draft", "finalized"],
//       default: "draft",
//     },
//   },
//   {
//     timestamps: true,
//   }
// );

// const Payroll = mongoose.model("Payroll", PayrollSchema);

// export default Payroll;



import mongoose from "mongoose";


const PayrollSchema = new mongoose.Schema(
  {
    employee: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "Profile",
      required: true,
    },
    basic: {
      type: Number,
      required: true,
    },
    hra: {
      type: Number,
      default: 0,
    },
    allowances: [
      {
        title: String,
        amount: Number,
      },
    ],
    deductions: [
      {
        title: String,
        amount: Number,
      },
    ],
    tax: {
      type: Number,
      default: 0,
    },
    month: {
      type: String, // e.g. '2025-09'
      required: true,
      index: true
    },
    year: {
      type: Number, // e.g. 2025
      required: true
    },
    absentDays: {
      type: Number,
      default: 0
    },
    absentDeduction: {
      type: Number,
      default: 0
    },
    totalEarnings: { type: Number },
    totalDeductions: { type: Number },
    netPay: { type: Number },
    generatedBy: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "User",
    },
    generatedAt: {
      type: Date,
      default: Date.now,
    },
    status: {
      type: String,
      enum: ["draft", "pending_approval", "approved", "rejected"],
      default: "draft",
    },
    approvedBy: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "User"
    },
    approvedAt: {
      type: Date
    },
    rejectionReason: {
      type: String
    }
  },
  {
    timestamps: true,
    toJSON: { virtuals: true },
    toObject: { virtuals: true }
  }
);

// Virtual for employee details
PayrollSchema.virtual('employeeProfile', {
  ref: 'Profile',
  localField: 'employee',
  foreignField: '_id',
  justOne: true
});

// Virtual for generated by user details
PayrollSchema.virtual('generatedByUser', {
  ref: 'User',
  localField: 'generatedBy',
  foreignField: '_id',
  justOne: true
});

// Virtual for approved by user details
PayrollSchema.virtual('approvedByUser', {
  ref: 'User',
  localField: 'approvedBy',
  foreignField: '_id',
  justOne: true
});

export default mongoose.model("Payroll", PayrollSchema);